'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  Palette, Search, Filter, Star, Download, \n  Check, Settings, Eye, Sparkles \n} from 'lucide-react';\nimport { useForm } from 'react-hook-form';\nimport apiClient from '@/lib/api';\n\ninterface Theme {\n  id: string;\n  name: string;\n  name_fa: string;\n  description: string;\n  category: {\n    id: string;\n    name_fa: string;\n    category_type: string;\n  };\n  theme_type: 'free' | 'premium' | 'custom';\n  preview_image: string;\n  demo_url?: string;\n  price: number;\n  is_featured: boolean;\n  download_count: number;\n  usage_count: number;\n  rating_average: number;\n  rating_count: number;\n  customization_options?: {\n    colors: string[];\n    fonts: string[];\n    layout: object;\n  };\n}\n\ninterface StoreTheme {\n  id: string;\n  theme: Theme;\n  custom_colors: object;\n  layout_config: object;\n  font_selections: object;\n  is_active: boolean;\n  applied_at: string;\n}\n\ninterface ThemeManagerProps {\n  storeId: string;\n  onThemeChange?: (theme: StoreTheme) => void;\n}\n\nconst ThemeManager: React.FC<ThemeManagerProps> = ({ storeId, onThemeChange }) => {\n  const [themes, setThemes] = useState<Theme[]>([]);\n  const [storeThemes, setStoreThemes] = useState<StoreTheme[]>([]);\n  const [activeTheme, setActiveTheme] = useState<StoreTheme | null>(null);\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showCustomizer, setShowCustomizer] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [applyingTheme, setApplyingTheme] = useState<string | null>(null);\n\n  const { register, handleSubmit, setValue, watch } = useForm();\n\n  useEffect(() => {\n    loadThemes();\n    loadStoreThemes();\n  }, [storeId]);\n\n  const loadThemes = async () => {\n    try {\n      const response = await apiClient.get('/themes/themes/');\n      setThemes(response.data.results || []);\n    } catch (error) {\n      console.error('خطا در بارگیری قالب‌ها:', error);\n    }\n  };\n\n  const loadStoreThemes = async () => {\n    try {\n      const response = await apiClient.get('/themes/store-themes/');\n      setStoreThemes(response.data.results || []);\n      \n      // Find active theme\n      const active = response.data.results.find((st: StoreTheme) => st.is_active);\n      setActiveTheme(active || null);\n    } catch (error) {\n      console.error('خطا در بارگیری قالب‌های فروشگاه:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const applyTheme = async (themeId: string) => {\n    setApplyingTheme(themeId);\n    try {\n      const response = await apiClient.post('/themes/store-themes/', {\n        theme: themeId,\n        custom_colors: {},\n        layout_config: {},\n        font_selections: {}\n      });\n      \n      await loadStoreThemes();\n      \n      if (onThemeChange) {\n        onThemeChange(response.data);\n      }\n      \n      // Show success message\n      console.log('قالب با موفقیت اعمال شد');\n    } catch (error) {\n      console.error('خطا در اعمال قالب:', error);\n    } finally {\n      setApplyingTheme(null);\n    }\n  };\n\n  const customizeTheme = async (customizations: any) => {\n    if (!activeTheme) return;\n    \n    try {\n      const response = await apiClient.post(\n        `/themes/store-themes/${activeTheme.id}/customize/`,\n        customizations\n      );\n      \n      setActiveTheme(response.data);\n      \n      if (onThemeChange) {\n        onThemeChange(response.data);\n      }\n      \n      setShowCustomizer(false);\n    } catch (error) {\n      console.error('خطا در شخصی‌سازی قالب:', error);\n    }\n  };\n\n  const filteredThemes = themes.filter(theme => {\n    const matchesCategory = selectedCategory === 'all' || theme.category.category_type === selectedCategory;\n    const matchesSearch = theme.name_fa.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         theme.description.toLowerCase().includes(searchTerm.toLowerCase());\n    return matchesCategory && matchesSearch;\n  });\n\n  const categories = [\n    { value: 'all', label: 'همه قالب‌ها' },\n    { value: 'business', label: 'کسب و کار' },\n    { value: 'fashion', label: 'مد و پوشاک' },\n    { value: 'food', label: 'غذا و رستوران' },\n    { value: 'electronics', label: 'الکترونیک' },\n    { value: 'beauty', label: 'زیبایی' },\n    { value: 'minimal', label: 'مینیمال' },\n    { value: 'modern', label: 'مدرن' },\n  ];\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n        <span className=\"mr-3 text-gray-600\">در حال بارگیری قالب‌ها...</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\" dir=\"rtl\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900 flex items-center\">\n            <Palette className=\"w-6 h-6 ml-3\" />\n            مدیریت قالب\n          </h2>\n          <p className=\"text-gray-600 mt-1\">\n            انتخاب و شخصی‌سازی قالب فروشگاه شما\n          </p>\n        </div>\n        \n        {activeTheme && (\n          <button\n            onClick={() => setShowCustomizer(true)}\n            className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            <Settings className=\"w-4 h-4 ml-2\" />\n            شخصی‌سازی قالب فعال\n          </button>\n        )}\n      </div>\n\n      {/* Active Theme Display */}\n      {activeTheme && (\n        <div className=\"bg-green-50 border border-green-200 rounded-lg p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <img\n                src={activeTheme.theme.preview_image}\n                alt={activeTheme.theme.name_fa}\n                className=\"w-16 h-16 rounded-lg object-cover ml-4\"\n              />\n              <div>\n                <h3 className=\"font-semibold text-green-900\">\n                  قالب فعال: {activeTheme.theme.name_fa}\n                </h3>\n                <p className=\"text-green-700 text-sm\">\n                  {activeTheme.theme.description}\n                </p>\n                <p className=\"text-green-600 text-xs mt-1\">\n                  اعمال شده در: {new Date(activeTheme.applied_at).toLocaleDateString('fa-IR')}\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-3 space-x-reverse\">\n              {activeTheme.theme.demo_url && (\n                <a\n                  href={activeTheme.theme.demo_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"flex items-center px-3 py-2 text-green-700 border border-green-300 rounded hover:bg-green-100\"\n                >\n                  <Eye className=\"w-4 h-4 ml-2\" />\n                  مشاهده دمو\n                </a>\n              )}\n              <span className=\"inline-flex items-center px-3 py-1 bg-green-200 text-green-800 rounded-full text-sm\">\n                <Check className=\"w-4 h-4 ml-1\" />\n                فعال\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Filters and Search */}\n      <div className=\"flex flex-col md:flex-row gap-4\">\n        <div className=\"flex-1\">\n          <div className=\"relative\">\n            <Search className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n            <input\n              type=\"text\"\n              placeholder=\"جستجو در قالب‌ها...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pr-10 pl-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n        </div>\n        \n        <div className=\"md:w-48\">\n          <select\n            value={selectedCategory}\n            onChange={(e) => setSelectedCategory(e.target.value)}\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            {categories.map(category => (\n              <option key={category.value} value={category.value}>\n                {category.label}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* Themes Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        <AnimatePresence>\n          {filteredThemes.map((theme) => {\n            const isApplied = activeTheme?.theme.id === theme.id;\n            const isApplying = applyingTheme === theme.id;\n            \n            return (\n              <motion.div\n                key={theme.id}\n                layout\n                initial={{ opacity: 0, scale: 0.9 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.9 }}\n                className={`bg-white rounded-lg shadow-md overflow-hidden border-2 transition-all hover:shadow-lg ${\n                  isApplied ? 'border-green-500' : 'border-transparent hover:border-blue-200'\n                }`}\n              >\n                {/* Theme Preview */}\n                <div className=\"relative\">\n                  <img\n                    src={theme.preview_image}\n                    alt={theme.name_fa}\n                    className=\"w-full h-48 object-cover\"\n                  />\n                  \n                  {/* Theme Type Badge */}\n                  <div className=\"absolute top-3 right-3\">\n                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                      theme.theme_type === 'free' ? 'bg-green-100 text-green-800' :\n                      theme.theme_type === 'premium' ? 'bg-blue-100 text-blue-800' :\n                      'bg-purple-100 text-purple-800'\n                    }`}>\n                      {theme.theme_type === 'free' ? 'رایگان' :\n                       theme.theme_type === 'premium' ? 'پریمیوم' : 'سفارشی'}\n                    </span>\n                  </div>\n                  \n                  {/* Featured Badge */}\n                  {theme.is_featured && (\n                    <div className=\"absolute top-3 left-3\">\n                      <span className=\"inline-flex items-center px-2 py-1 bg-yellow-100 text-yellow-800 rounded-full text-xs font-medium\">\n                        <Sparkles className=\"w-3 h-3 ml-1\" />\n                        ویژه\n                      </span>\n                    </div>\n                  )}\n                  \n                  {/* Applied Badge */}\n                  {isApplied && (\n                    <div className=\"absolute inset-0 bg-green-500 bg-opacity-20 flex items-center justify-center\">\n                      <span className=\"bg-green-500 text-white px-4 py-2 rounded-lg font-medium flex items-center\">\n                        <Check className=\"w-4 h-4 ml-2\" />\n                        قالب فعال\n                      </span>\n                    </div>\n                  )}\n                </div>\n                \n                {/* Theme Info */}\n                <div className=\"p-4\">\n                  <div className=\"flex items-start justify-between mb-2\">\n                    <h3 className=\"font-semibold text-gray-900\">{theme.name_fa}</h3>\n                    {theme.price > 0 && (\n                      <span className=\"text-lg font-bold text-blue-600\">\n                        {theme.price.toLocaleString()} تومان\n                      </span>\n                    )}\n                  </div>\n                  \n                  <p className=\"text-gray-600 text-sm mb-3 line-clamp-2\">\n                    {theme.description}\n                  </p>\n                  \n                  {/* Theme Stats */}\n                  <div className=\"flex items-center justify-between text-xs text-gray-500 mb-4\">\n                    <div className=\"flex items-center\">\n                      <Star className=\"w-3 h-3 ml-1\" />\n                      {theme.rating_average.toFixed(1)} ({theme.rating_count})\n                    </div>\n                    <div className=\"flex items-center\">\n                      <Download className=\"w-3 h-3 ml-1\" />\n                      {theme.download_count}\n                    </div>\n                  </div>\n                  \n                  {/* Action Buttons */}\n                  <div className=\"flex space-x-2 space-x-reverse\">\n                    {theme.demo_url && (\n                      <a\n                        href={theme.demo_url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"flex-1 flex items-center justify-center px-3 py-2 border border-gray-300 text-gray-700 rounded hover:bg-gray-50 text-sm\"\n                      >\n                        <Eye className=\"w-4 h-4 ml-1\" />\n                        دمو\n                      </a>\n                    )}\n                    \n                    <button\n                      onClick={() => applyTheme(theme.id)}\n                      disabled={isApplied || isApplying}\n                      className={`flex-1 flex items-center justify-center px-3 py-2 rounded text-sm transition-colors ${\n                        isApplied \n                          ? 'bg-green-100 text-green-800 cursor-default'\n                          : isApplying\n                          ? 'bg-blue-100 text-blue-800 cursor-not-allowed'\n                          : 'bg-blue-600 text-white hover:bg-blue-700'\n                      }`}\n                    >\n                      {isApplying ? (\n                        <>\n                          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-current ml-1\"></div>\n                          در حال اعمال\n                        </>\n                      ) : isApplied ? (\n                        <>\n                          <Check className=\"w-4 h-4 ml-1\" />\n                          اعمال شده\n                        </>\n                      ) : (\n                        'انتخاب'\n                      )}\n                    </button>\n                  </div>\n                </div>\n              </motion.div>\n            );\n          })}\n        </AnimatePresence>\n      </div>\n\n      {/* No Results */}\n      {filteredThemes.length === 0 && (\n        <div className=\"text-center py-12\">\n          <Filter className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n            قالبی یافت نشد\n          </h3>\n          <p className=\"text-gray-600\">\n            برای یافتن قالب مناسب، فیلترها یا عبارت جستجو را تغییر دهید\n          </p>\n        </div>\n      )}\n\n      {/* Theme Customizer Modal */}\n      <AnimatePresence>\n        {showCustomizer && activeTheme && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\n            onClick={() => setShowCustomizer(false)}\n          >\n            <motion.div\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n              className=\"bg-white rounded-lg p-6 max-w-md w-full\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <h3 className=\"text-lg font-semibold mb-4\">\n                شخصی‌سازی قالب {activeTheme.theme.name_fa}\n              </h3>\n              \n              <form onSubmit={handleSubmit(customizeTheme)} className=\"space-y-4\">\n                {/* Color Customization */}\n                {activeTheme.theme.customization_options?.colors && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      رنگ اصلی\n                    </label>\n                    <input\n                      type=\"color\"\n                      {...register('custom_colors.primary')}\n                      className=\"w-full h-10 rounded border border-gray-300\"\n                    />\n                  </div>\n                )}\n                \n                {/* Font Selection */}\n                {activeTheme.theme.customization_options?.fonts && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      فونت اصلی\n                    </label>\n                    <select\n                      {...register('font_selections.primary')}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500\"\n                    >\n                      <option value=\"vazir\">وزیر</option>\n                      <option value=\"shabnam\">شبنم</option>\n                      <option value=\"tanha\">تنها</option>\n                    </select>\n                  </div>\n                )}\n                \n                <div className=\"flex justify-end space-x-3 space-x-reverse pt-4\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowCustomizer(false)}\n                    className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded hover:bg-gray-50\"\n                  >\n                    انصراف\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                  >\n                    اعمال تغییرات\n                  </button>\n                </div>\n              </form>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default ThemeManager;\n"